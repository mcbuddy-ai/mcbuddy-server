---
networks:
  default:
    driver: bridge
services:
  mcbuddy-server:
    build:
      context: .
      dockerfile: Dockerfile
    cap_add: [ "SYS_PTRACE" ]
    container_name: mcbuddy-server-dev
    cpus: '1.0'
    depends_on:
      mcbuddy-server-mongo:
        condition: service_healthy
      mcbuddy-server-redis:
        condition: service_healthy
    env_file: .env.dev
    environment:
      API_NAME: ${API_NAME}
      API_URL: ${API_URL}
      ASKX_SYSTEM_MESSAGE: ${ASKX_SYSTEM_MESSAGE}
      CHAT_TTL_SECONDS: ${CHAT_TTL_SECONDS}
      MAX_MESSAGES: ${MAX_MESSAGES}
      MONGODB_DATABASE: ${MONGODB_DATABASE}
      MONGODB_URI: ${MONGODB_URI}
      OPENROUTER_API_CTX: ${OPENROUTER_API_CTX}
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
      OPENROUTER_API_MODEL: ${OPENROUTER_API_MODEL}
      OPENROUTER_API_URL: ${OPENROUTER_API_URL}
      PORT: ${PORT}
      REDIS_DB: ${REDIS_DB}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: ${REDIS_PORT}
      SYSTEM_MESSAGE: ${SYSTEM_MESSAGE}
      SYSTEM_MESSAGE_TG: ${SYSTEM_MESSAGE_TG}
      SYSTEM_MESSAGE_WITH_CONTEXT: ${SYSTEM_MESSAGE_WITH_CONTEXT}
      TZ: ${TZ}
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 20s
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      timeout: 10s
    logging:
      driver: json-file
      options:
        max-file: '3'
        max-size: 10m
    mem_limit: 512m
    mem_reservation: 300m
    networks: [ default ]
    ports:
      - ${PORT}:3000
    restart: unless-stopped
    security_opt: [ "seccomp:unconfined" ]
  mcbuddy-server-mongo:
    command: ["--wiredTigerCacheSizeGB", "0.25"]
    container_name: mcbuddy-server-mongo-dev
    cpus: '0.5'
    env_file: .env.dev
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      TZ: ${TZ}
    healthcheck:
      interval: 15s
      retries: 12
      start_period: 20s
      test: ["CMD-SHELL", "mongosh --eval 'db.runCommand(\"ping\")' --quiet | grep -q 1"]
      timeout: 5s
    image: mongo:8.0.15
    logging:
      driver: local
      options:
        max-file: '3'
        max-size: 10m
    mem_limit: 512m
    mem_reservation: 256m
    networks: [ default ]
    ports: [ "27017:27017" ]
    restart: unless-stopped
    volumes:
      - mcbuddy-server-mongo-data-dev:/data/db
  mcbuddy-server-redis:
    command: >
      redis-server --port 6379
      --loglevel warning
      --save 20 1
      --requirepass ${REDIS_PASSWORD}
    container_name: mcbuddy-server-redis-dev
    cpus: '0.5'
    env_file: [ .env.dev ]
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      TZ: ${TZ}
    healthcheck:
      interval: 10s
      retries: 3
      start_period: 10s
      test: ["CMD", "sh", "-c", "redis-cli -a ${REDIS_PASSWORD} --no-auth-warning ping"]
      timeout: 5s
    image: redis:8.2-alpine
    logging:
      driver: local
      options:
        max-file: '3'
        max-size: 10m
    mem_limit: 256m
    mem_reservation: 128m
    networks: [ default ]
    ports: [ "6379:6379" ]
    restart: unless-stopped
    user: '0'
    volumes:
      - mcbuddy-server-redis-data-dev:/data
volumes:
  mcbuddy-server-mongo-data-dev:
    driver: local
  mcbuddy-server-redis-data-dev:
    driver: local