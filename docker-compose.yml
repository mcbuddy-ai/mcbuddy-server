---
networks:
  default:
    driver: bridge
services:
  caddy:
    container_name: mcbuddy_caddy
    depends_on: [server]
    image: caddy:2-alpine
    networks: [default]
    ports:
      - '80:80'
      - '443:443'
      - 443:443/udp
    restart: unless-stopped
    volumes:
      - ./configurations/caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
  mongo:
    container_name: mcbuddy_mongo
    env_file: .env
    image: mongo:latest
    networks: [ default ]
    restart: unless-stopped
    volumes:
      - ${HOME}/data/mcbuddy/mongo:/data/db
  redis:
    command: redis-server --appendonly yes
    container_name: mcbuddy_redis
    env_file: .env
    healthcheck:
      interval: 5s
      retries: 5
      test: [ "CMD", "redis-cli", "ping" ]
      timeout: 3s
    image: redis:7-alpine
    networks: [ default ]
    restart: unless-stopped
    user: '0'
    volumes:
      - ${HOME}/data/mcbuddy/redis:/data
  server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mcbuddy_server
    depends_on: [mongo, redis]
    env_file: .env
    healthcheck:
      interval: 30s
      retries: 3
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      timeout: 10s
    networks: [default]
    ports:
      - '3000:3000'
    restart: unless-stopped
volumes:
  caddy_config:
    driver: local
  caddy_data:
    driver: local